name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

env:
  REGISTRY: ghcr.io
  SCRAPER_IMAGE: ${{ github.repository }}
  UI_IMAGE: ${{ github.repository }}-ui

jobs:
  build-and-push-scraper:
    name: Build Scraper Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for scraper
      id: meta-scraper
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.SCRAPER_IMAGE }}
        tags: |
          type=raw,value=latest
          type=sha,prefix={{branch}}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push scraper image
      uses: docker/build-push-action@v5
      with:
        context: .
        target: production
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-scraper.outputs.tags }}
        labels: ${{ steps.meta-scraper.outputs.labels }}
        cache-from: type=gha,scope=scraper
        cache-to: type=gha,mode=max,scope=scraper

    - name: Summary - Scraper image
      run: |
        echo "## 🏥 Hospital Scraper Image" >> $GITHUB_STEP_SUMMARY
        echo "Pushed tags:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta-scraper.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  build-and-push-ui:
    name: Build UI Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for UI
      id: meta-ui
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.UI_IMAGE }}
        tags: |
          type=raw,value=latest
          type=sha,prefix={{branch}}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push UI image
      uses: docker/build-push-action@v5
      with:
        context: ./ui
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-ui.outputs.tags }}
        labels: ${{ steps.meta-ui.outputs.labels }}
        cache-from: type=gha,scope=ui
        cache-to: type=gha,mode=max,scope=ui

    - name: Summary - UI image
      run: |
        echo "## 🖥️ Hospital UI Image" >> $GITHUB_STEP_SUMMARY
        echo "Pushed tags:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta-ui.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [build-and-push-scraper, build-and-push-ui]
    steps:
    - name: Create deployment summary
      run: |
        echo "# 🚀 Docker Images Built and Pushed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📦 Available Images" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Hospital Scraper" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "ghcr.io/${{ env.SCRAPER_IMAGE }}:latest" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Hospital UI (API + Frontend)" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "ghcr.io/${{ env.UI_IMAGE }}:latest" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🐳 Docker Compose" >> $GITHUB_STEP_SUMMARY
        echo "Update your docker-compose.yml to use these images and deploy!" >> $GITHUB_STEP_SUMMARY