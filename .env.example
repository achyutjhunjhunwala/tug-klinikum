# =================================================================
# HOSPITAL WAIT TIME SCRAPER - ENVIRONMENT CONFIGURATION
# =================================================================
# This is the centralized environment configuration for the entire project
# Copy this file to .env and configure with your actual values
# All services (scraper, backend API, frontend) use this single .env file

# =================================================================
# ELASTICSEARCH CLOUD CONFIGURATION (REQUIRED)
# =================================================================
# Get these values from your Elasticsearch Cloud deployment
ELASTICSEARCH_CLOUD_URL=https://your-deployment-url.es.region.gcp.elastic-cloud.com:9243
ELASTICSEARCH_API_KEY=your_base64_encoded_api_key_here
ELASTICSEARCH_APM_URL=https://your-deployment-url.apm.region.gcp.elastic-cloud.com:443
ELASTICSEARCH_INDEX=hospital-metrics
ELASTICSEARCH_SSL=true

# =================================================================
# APPLICATION CONFIGURATION
# =================================================================
NODE_ENV=development
LOG_LEVEL=debug

# =================================================================
# SCRAPER CONFIGURATION
# =================================================================
# Scraping interval in minutes
SCRAPING_INTERVAL=30
SCRAPING_TIMEZONE=Europe/Berlin

# Hospital URLs to scrape (update these for your target hospitals)
ADULT_TARGET_URL=https://www.vivantes.de/klinikum-im-friedrichshain/rettungsstelle
CHILDREN_TARGET_URL=https://www.vivantes.de/klinikum-im-friedrichshain/kinder-jugendmedizin/kinderrettungsstelle

# =================================================================
# BACKEND API CONFIGURATION
# =================================================================
# Server port for the backend API
PORT=4000

# Rate Limiting Configuration
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=20
RATE_LIMIT_SKIP_SUCCESSFUL=false

# Security Configuration
CORS_ORIGINS=http://localhost:3001,http://localhost:3000
API_TIMEOUT_MS=30000
MAX_REQUEST_SIZE=1mb

# =================================================================
# FRONTEND CONFIGURATION
# =================================================================
# Vite Frontend Configuration (Development only)
# In production, frontend is served by backend server on port 4000
VITE_API_URL=http://localhost:4000/api
VITE_APP_TITLE=Hospital Wait Times
VITE_REFRESH_INTERVAL=30000
VITE_BACKEND_HEALTH_URL=http://localhost:4000/health

# =================================================================
# OBSERVABILITY CONFIGURATION
# =================================================================
# OpenTelemetry settings
OTEL_SERVICE_NAME=hospital-scraper
OTEL_SERVICE_VERSION=1.0.0
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OBSERVABILITY_PROVIDERS=elastic

# OpenTelemetry advanced settings
OTEL_TRACE_SAMPLING=1.0
OTEL_METRIC_INTERVAL=30000

# =================================================================
# DATABASE CONFIGURATION
# =================================================================
# Database settings (optional overrides)
DB_TIMEOUT=30000
DB_RETRIES=3

# =================================================================
# DEVELOPMENT vs PRODUCTION
# =================================================================
# For LOCAL DEVELOPMENT:
#   1. Copy this file to .env and fill in your Elasticsearch credentials
#   2. Run: ./dev-start.sh (starts OTEL + Filebeat)
#   3. Run: npm start (starts your app)
#
# For PRODUCTION DEPLOYMENT:
#   1. Set NODE_ENV=production
#   2. Configure all required variables above
#   3. Run: ./prod-start.sh (starts everything in Docker)
#
# =================================================================