# =================================================================
# HOSPITAL SCRAPER - ENVIRONMENT CONFIGURATION
# =================================================================
# Copy this file to .env and configure with your actual values

# =================================================================
# ELASTICSEARCH CLOUD CONFIGURATION (REQUIRED)
# =================================================================
# Get these from your Elasticsearch Cloud deployment
ELASTICSEARCH_CLOUD_URL=https://your-deployment.es.region.gcp.cloud.es.io:9200
ELASTICSEARCH_API_KEY=your_elasticsearch_api_key_here
ELASTICSEARCH_APM_URL=https://your-deployment.apm.region.gcp.cloud.es.io:443
ELASTICSEARCH_INDEX=hospital-metrics

# =================================================================
# APPLICATION CONFIGURATION
# =================================================================
NODE_ENV=development
LOG_LEVEL=info

# Scraping configuration
SCRAPING_INTERVAL=30
SCRAPING_TIMEZONE=Europe/Berlin

# =================================================================
# OBSERVABILITY CONFIGURATION
# =================================================================
# OpenTelemetry settings
OTEL_SERVICE_NAME=hospital-scraper
OTEL_SERVICE_VERSION=1.0.0
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OBSERVABILITY_PROVIDERS=elastic

# =================================================================
# OPTIONAL CONFIGURATION
# =================================================================
# Database settings (optional overrides)
ELASTICSEARCH_SSL=true
DB_TIMEOUT=30000
DB_RETRIES=3

# OpenTelemetry advanced settings (optional)
OTEL_TRACE_SAMPLING=1.0
OTEL_METRIC_INTERVAL=30000

# =================================================================
# DEVELOPMENT vs PRODUCTION
# =================================================================
# For LOCAL DEVELOPMENT:
#   1. Set the Elasticsearch credentials above
#   2. Run: ./dev-start.sh (starts OTEL + Filebeat)
#   3. Run: npm start (starts your app)
#
# For PRODUCTION DEPLOYMENT:
#   1. Set NODE_ENV=production
#   2. Configure all required variables above
#   3. Run: ./prod-start.sh (starts everything in Docker)
#
# =================================================================
