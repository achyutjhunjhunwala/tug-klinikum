services:
  # OTEL Collector for Traces and Metrics
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: hospital-scraper-otel
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics
    environment:
      - ELASTICSEARCH_CLOUD_URL=${ELASTICSEARCH_CLOUD_URL}
      - ELASTICSEARCH_API_KEY=${ELASTICSEARCH_API_KEY}
      - ELASTICSEARCH_APM_URL=${ELASTICSEARCH_APM_URL}
    restart: unless-stopped
    networks:
      - hospital-network

  # Filebeat for Log Collection
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: hospital-scraper-filebeat
    user: root
    volumes:
      - /tmp/filebeat-runtime.yml:/usr/share/filebeat/filebeat.yml:ro
      - hospital-logs:/app/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - ELASTICSEARCH_CLOUD_URL=${ELASTICSEARCH_CLOUD_URL}
      - ELASTICSEARCH_API_KEY=${ELASTICSEARCH_API_KEY}
    restart: unless-stopped
    depends_on:
      - otel-collector
    networks:
      - hospital-network

  # Hospital Scraper Application
  hospital-scraper:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hospital-scraper-app
    volumes:
      - hospital-logs:/app/logs
    environment:
      - NODE_ENV=production
      - ELASTICSEARCH_CLOUD_URL=${ELASTICSEARCH_CLOUD_URL}
      - ELASTICSEARCH_API_KEY=${ELASTICSEARCH_API_KEY}
      - ELASTICSEARCH_APM_URL=${ELASTICSEARCH_APM_URL}
      - ELASTICSEARCH_INDEX=${ELASTICSEARCH_INDEX:-hospital-metrics}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME:-hospital-scraper}
      - OTEL_SERVICE_VERSION=${OTEL_SERVICE_VERSION:-1.0.0}
      - OBSERVABILITY_PROVIDERS=elastic
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SCRAPING_INTERVAL=${SCRAPING_INTERVAL:-30}
      - SCRAPING_TIMEZONE=${SCRAPING_TIMEZONE:-Europe/Berlin}
    restart: unless-stopped
    depends_on:
      - otel-collector
      - filebeat
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hospital-network

volumes:
  hospital-logs:
    driver: local

networks:
  hospital-network:
    driver: bridge
